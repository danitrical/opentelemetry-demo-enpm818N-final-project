name: CD - Deploy OpenTelemetry Demo to EKS (No Helm)

on:
  workflow_run:
    workflows: ["CI - Build and Push Docker Image"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: latest

    - name: Replace image registry in manifests
      run: |
        sed -E -i "s|ghcr.io/open-telemetry/demo:2.0.2-([a-zA-Z0-9\-]+)|$DOCKER_USERNAME/\1:latest|g" kubernetes/opentelemetry-demo.yaml

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f kubernetes/opentelemetry-demo.yaml -n otel-demo

    # - name: Verify Deployment Status
    #   run: |
    #     kubectl get all -n otel-demo
    #     kubectl rollout status deployment/frontend -n otel-demo
    - name: Monitor rollout and rollback on failure
      run: |
        echo "üîç Checking rollouts..."
        deployments=$(kubectl get deployments -n otel-demo -o jsonpath="{.items[*].metadata.name}")
        failed=0

        for deploy in $deployments; do
          echo "‚è≥ Waiting for rollout of $deploy..."
          if ! kubectl rollout status deployment/$deploy -n otel-demo --timeout=120s; then
            echo "‚ùå Rollout failed for $deploy"
            failed=1
            break
          fi
          echo "‚úÖ $deploy rolled out successfully"
        done

        if [ "$failed" -eq 1 ]; then
          echo "üö® A failure was detected. Attempting rollback (only if revisions exist)..."
          for deploy in $deployments; do
            if kubectl rollout history deployment/$deploy -n otel-demo | grep -q "REVISION"; then
              echo "üîÅ Rolling back $deploy..."
              kubectl rollout undo deployment/$deploy -n otel-demo || echo "‚ö†Ô∏è Failed to rollback $deploy"
            else
              echo "‚ö†Ô∏è No previous revision found for $deploy ‚Äî skipping rollback"
            fi
          done
          echo "‚ö†Ô∏è  All deployments reversed to previous revision"
        else
          echo "‚úÖ All deployments succeeded"
        fi
